<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>🎯美团笔试-空间回廊</title>
    <link href="/archives/%E7%BE%8E%E5%9B%A2%E7%AC%94%E8%AF%95-%E7%A9%BA%E9%97%B4%E5%9B%9E%E5%BB%8A/"/>
    <url>/archives/%E7%BE%8E%E5%9B%A2%E7%AC%94%E8%AF%95-%E7%A9%BA%E9%97%B4%E5%9B%9E%E5%BB%8A/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="http://www.mengyingjie.com/">⭐ 孟应杰的网站: www.mengyingjie.com ⭐</a></p></blockquote><h3 id="📌题目描述："><a href="#📌题目描述：" class="headerlink" title="📌题目描述："></a>📌题目描述：</h3><p>有一款叫做空间回廊的游戏，游戏中有着n个房间依次相连，如图，1号房间可以走到2号房间，以此类推，n号房间可以走到1号房间。</p><p>这个游戏的最终目的是为了在这些房间中留下尽可能多的烙印，在每个房间里留下烙印所花费的法力值是不相同的，已知他共有m点法力值，这些法力是不可恢复的。</p><p><img src="36-1.jpg"></p><p>小明刚接触这款游戏，所以只会耿直的玩，所以他的每一个行动都是可以预料的：</p><p>1.一开始小明位于1号房间。<br>2.如果他剩余的法力能在当前的房间中留下一个烙印，那么他就会毫不犹豫的花费法力值。<br>3.无论是否留下了烙印，下一个时刻他都会进入下一个房间，如果当前位于i房间，则会进入i+1房间，如果在n号房间则会进入1号房间。<br>4.当重复经过某一个房间时，可以再次留下烙印。</p><p>很显然，这个游戏是会终止的，即剩余的法力值不能在任何房间留下烙印的时候，游戏终止。请问他共能留下多少个烙印。</p><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><p>输入第一行有两个正整数n和m，分别代表房间数量和小明拥有的法力值。(1&lt;=n&lt;=100000,1&lt;=m&lt;=10^18)<br>输入第二行有n个正整数，分别代表1~n号房间留下烙印的法力值花费。(1&lt;=a_i&lt;=10^9)</p><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><p>输出仅包含一个整数，即最多能留下的烙印。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><p>4 21<br>2 1 4 3</p><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><p>9</p><h4 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h4><p>样例解释：<br>显然是所有房间都留下两个烙印，然后剩下1点法力值，仅能在2号房间再留下一个烙印.</p><h3 id="⌨代码实现"><a href="#⌨代码实现" class="headerlink" title="⌨代码实现"></a>⌨代码实现</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-comment">//输入房间数量m，小明拥有的法力值n</span><br>    <span class="hljs-keyword">int</span> n, m;<br>    <span class="hljs-built_in">cin</span> &gt;&gt; n &gt;&gt; m;<br>    <span class="hljs-comment">//输入每个房间消耗的法力值</span><br>    <span class="hljs-keyword">int</span> arr[n];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)&#123;<br>        <span class="hljs-built_in">cin</span> &gt;&gt; arr[i];<br>    &#125;<br>    <span class="hljs-comment">//定义两个变量，cnt用来计数，记录留下的烙印数</span><br>    <span class="hljs-comment">//sign,为设立的标志，当小明在一圈中消耗过法力值，标志位置为1，</span><br>    <span class="hljs-comment">//如果一圈下来sign=0，那么代表这一圈小明没有消耗法力值，那么就可以结束循环了。</span><br>    <span class="hljs-keyword">int</span> cnt = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">int</span> sign = <span class="hljs-number">0</span>;<br>    <span class="hljs-comment">//循环开始，因为不知道要循环多少遍，所以中间参数为空</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;  ; i++ )&#123;<br>        <span class="hljs-comment">//如果法力值大于当前格子的法力值</span><br>        <span class="hljs-keyword">if</span>( m &gt;= arr[i])&#123;<br>            m = m - arr[i]; <span class="hljs-comment">//法力值减去当前格子的法力值</span><br>            cnt++;          <span class="hljs-comment">//烙印数+1</span><br>            sign = <span class="hljs-number">1</span>;       <span class="hljs-comment">//本圈消耗了法力值，sign=1</span><br>        &#125;<br>        <span class="hljs-comment">//当i = n - 1，说明一次循环结束，如果sign=1，则需要进行下一轮循环</span><br>        <span class="hljs-comment">//那么就把sign归0，有因为结束时会有i++，所以i=0-1，那么就开启新一轮循环</span><br>        <span class="hljs-keyword">if</span>((i == n - <span class="hljs-number">1</span>) &amp;&amp; (sign == <span class="hljs-number">1</span>))&#123;<br>            sign = <span class="hljs-number">0</span>;<br>            i = <span class="hljs-number">0</span><span class="hljs-number">-1</span>;<br>        &#125;<br>        <span class="hljs-comment">//当i = n - 1，循环结束，sign=0，则不需要继续循环，直接跳出死循环。</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((i == n - <span class="hljs-number">1</span>) &amp;&amp; (sign == <span class="hljs-number">0</span>))&#123;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; cnt &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>遇到此类问题，但看了文章还是未解决，<br>评论或加 QQ：781378815</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>c++</tag>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🔑json到Object到具体对象</title>
    <link href="/archives/%F0%9F%94%91json%E5%88%B0Object%E5%88%B0%E5%85%B7%E4%BD%93%E5%AF%B9%E8%B1%A1/"/>
    <url>/archives/%F0%9F%94%91json%E5%88%B0Object%E5%88%B0%E5%85%B7%E4%BD%93%E5%AF%B9%E8%B1%A1/</url>
    
    <content type="html"><![CDATA[<h2 id="🏡环境"><a href="#🏡环境" class="headerlink" title="🏡环境"></a>🏡环境</h2><p>SpringBoot + lombok</p><h2 id="📋遇到需求"><a href="#📋遇到需求" class="headerlink" title="📋遇到需求"></a>📋遇到需求</h2><p>大概意思</p><p>给出一个参数通过URI接收一个对象test（可能是两种类的对象）和一个type（判断test类型）</p><h2 id="🌌假设："><a href="#🌌假设：" class="headerlink" title="🌌假设："></a>🌌假设：</h2><p>如果type为0，test为TestTest对象，</p><p>如果type为1，test为TestTest2对象</p><h2 id="🔬实现过程："><a href="#🔬实现过程：" class="headerlink" title="🔬实现过程："></a>🔬实现过程：</h2><p>TestTest.class和TestTest2.class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@Accessors(chain = true)</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TestTest</span> </span>&#123;<br>    String abc;<br>    String aaa;<br><br>    TestTest2 test2;<br>&#125;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@Accessors(chain = true)</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TestTest2</span> </span>&#123;<br>    String ddd;<br>    String ccc;<br>&#125;<br></code></pre></td></tr></table></figure><p>Controler</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/api/v1&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TestController</span> </span>&#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Logger log = LoggerFactory.getLogger(TestController.class);<br><br>    <span class="hljs-meta">@PostMapping(&quot;/hello&quot;)</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">helloWorld</span><span class="hljs-params">(String type,</span></span><br><span class="hljs-function"><span class="hljs-params">                             <span class="hljs-meta">@RequestBody</span> Object test)</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;<br>        <br>        log.info(<span class="hljs-string">&quot;test &#123;&#125;&quot;</span>, test.toString());<br>        <span class="hljs-keyword">if</span> (type.equals(<span class="hljs-string">&quot;0&quot;</span>)) &#123;<br>            TestTest testTest = <span class="hljs-keyword">new</span> TestTest();<br>            ObjectMapper objectMapper = <span class="hljs-keyword">new</span> ObjectMapper();<br>            String testString = objectMapper.writeValueAsString(test);<br>            testTest = objectMapper.readValue(testString, TestTest.class);<br>            <span class="hljs-keyword">return</span> testTest.toString();<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (type.equals(<span class="hljs-string">&quot;1&quot;</span>))&#123;<br>            TestTest2 testTest2 = <span class="hljs-keyword">new</span> TestTest2();<br>            ObjectMapper objectMapper = <span class="hljs-keyword">new</span> ObjectMapper();<br>            String testString = objectMapper.writeValueAsString(test);<br>            testTest2 = objectMapper.readValue(testString, TestTest2.class);<br>            <span class="hljs-keyword">return</span> testTest2toString();<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;error&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
      <category>spring</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
      <tag>spring</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/archives/hello-world/"/>
    <url>/archives/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>test</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
